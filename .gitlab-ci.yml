stages:
  - build
  - test
  - analyze

build:
  stage: build
  # Using Ubuntu image to ensure that installation commands are the same as for Ubuntu desktops
  image: ubuntu:latest
  cache:
    paths:
      - .pip2
      - .pip3
  before_script:
    - apt-get update
      # The Python 2 dependencies are required by ./configure
    - apt-get install -y
        autoconf git libtool lm-sensors gir1.2-gtk-3.0
        python-feedparser python-gi python-gconf python-gtk2-dev python-launchpadlib python-lxml python-pil python-pip python-pyinotify python-pyudev python-usb python-virtkey python-xlib
        python3-feedparser python3-gi python3-launchpadlib python3-lxml python3-pil python3-pip python3-pyinotify python3-pyudev python3-setproctitle python3-six python3-usb python3-xdg python3-xlib
      # The language setting is required for installing PySensors
    - LANG=C.UTF-8 pip3 --cache-dir=.pip3 install -r requirements.txt
      # Manually upgrading keyrings package prevents a dependency bug
      # https://stackoverflow.com/questions/53164278/missing-dependencies-causing-keyring-error-when-opening-spyder3-on-ubuntu18
    - pip --cache-dir=.pip2 install --upgrade keyrings.alt
      # python-rsvg is no longer in the latest Ubuntu repositories
    - curl -O http://de.archive.ubuntu.com/ubuntu/pool/universe/g/gnome-python-desktop/python-rsvg_2.32.0+dfsg-3_amd64.deb
    - dpkg -i python-rsvg_2.32.0+dfsg-3_amd64.deb
    - git clone https://github.com/tuomasjjrasanen/python-uinput.git
    - cd python-uinput && python setup.py build && python setup.py install && cd ..
    - git clone https://github.com/tuomasjjrasanen/libsuinput.git
    - cd libsuinput && autoreconf -i && ./configure && make && make install && cd ..
    - git clone https://github.com/rmt/pyinputevent.git
    - mkdir /usr/lib/python2.7/dist-packages/pyinputevent && /cp ./pyinputevent/* /usr/lib/python2.7/dist-packages/pyinputevent
  script:
    - autoreconf -i
    - ./configure
    - make
    - make install
    - g15-diag
    - g15-launch
    - g15-support-dump 2>&1 | tee g15-support-dump.txt
  artifacts:
    paths:
      - g15-support-dump.txt

lint:
  stage: test
  when: manual
  allow_failure: true
  image: python:latest
  cache:
    paths:
    - .pip3
  before_script:
  - python -V
  - pip --cache-dir=.pip3 install -r requirements.txt
  script:
  - pylint -j 0 *.py

cloc:
  stage: analyze
  when: manual
  image: alpine:latest
  before_script:
  - apk --no-cache add cloc
  script:
  - cloc . --exclude-list-file=clocignore.txt --report-file=cloc.txt --by-file-by-lang
  artifacts:
    paths:
    - cloc.txt
